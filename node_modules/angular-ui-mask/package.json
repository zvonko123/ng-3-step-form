{
  "name": "angular-ui-mask",
  "version": "1.7.2",
  "author": {
    "name": "https://github.com/angular-ui/ui-mask/graphs/contributors"
  },
  "license": "MIT",
  "homepage": "https://github.com/angular-ui/ui-mask",
  "dependencies": {},
  "devDependencies": {
    "del": "~1.2.0",
    "event-stream": "~3.3.1",
    "gesalakacula": "^1.4.0",
    "gulp": "~3.9.0",
    "gulp-bump": "^0.3.1",
    "gulp-concat": "~2.6.0",
    "gulp-footer": "~1.0.5",
    "gulp-git": "^1.4.0",
    "gulp-header": "~1.2.2",
    "gulp-jshint": "1.11.2",
    "gulp-plumber": "^1.0.1",
    "gulp-rename": "~1.2.2",
    "gulp-uglify": "~1.2.0",
    "jasmine-core": "^2.3.4",
    "jshint-stylish": "~2.0.1",
    "karma": "^0.13.9",
    "karma-chrome-launcher": "^0.2.0",
    "karma-coverage": "~0.5",
    "karma-firefox-launcher": "~0.1",
    "karma-jasmine": "~0.3",
    "karma-ng-html2js-preprocessor": "^0.1.0",
    "karma-phantomjs-launcher": "~0.2.1",
    "karma-sauce-launcher": "^0.2.14",
    "phantomjs": "^1.9.18",
    "run-sequence": "^1.1.2"
  },
  "scripts": {},
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/angular-ui/ui-mask.git"
  },
  "keywords": [
    "angular",
    "angular-ui",
    "mask"
  ],
  "readme": "# ui-mask [![Build Status](https://travis-ci.org/angular-ui/ui-mask.svg?branch=master)](https://travis-ci.org/angular-ui/ui-mask) [![npm version](https://badge.fury.io/js/angular-ui-mask.svg)](http://badge.fury.io/js/angular-ui-mask) [![Bower version](https://badge.fury.io/bo/angular-ui-mask.svg)](http://badge.fury.io/bo/angular-ui-mask) [![Join the chat at https://gitter.im/angular-ui/ui-mask](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/angular-ui/ui-mask?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nApply a mask on an input field so the user can only type pre-determined pattern.\n\n## Requirements\n\n- AngularJS\n\n## Usage\n\n\n### Bower\n\nYou can get it from [Bower](http://bower.io/)\n\n```sh\nbower install angular-ui-mask\n```\n\nLoad the script files in your application:\n\n```html\n<script type=\"text/javascript\" src=\"bower_components/angular/angular.js\"></script>\n<script type=\"text/javascript\" src=\"bower_components/angular-ui-mask/dist/mask.js\"></script>\n```\n\nAdd the specific module to your dependencies:\n\n```javascript\nangular.module('myApp', ['ui.mask', ...])\n```\n\n### NPM (CommonJS, ES6 module)\n\nAlso you can use it as CommonJS or ES6 module with any build system that supports those type of modules (Webpack, SystemJS, JSPM etc):\n\n```sh\nnpm install angular-ui-mask\n```\n\nAnd then include it with\n\n```javascript\n// CommonJS\nvar uiMask = require('angular-ui-mask');\nangular.module('myApp', [uiMask, ...]);\n```\n\n```javascript\n// ES6 module\nimport uiMask from 'angular-ui-mask';\nangular.module('myApp', [uiMask, ...]);\n```\n\n### Customizing\nYou can customize several behaviors of ui-mask by taking advantage of the `ui-options` object. Declare `ui-options` as an additional attribute on the same element where you declare `ui-mask`.\n\nInside of `ui-options`, you can customize these four properties:\n\n* `maskDefinitions` - default: `{\n                '9': /\\d/,\n                'A': /[a-zA-Z]/,\n                '*': /[a-zA-Z0-9]/\n            }`,\n* `clearOnBlur` - default: `true`,\n* `clearOnBlurPlaceholder` - default: `false`,\n* `eventsToHandle` - default: `['input', 'keyup', 'click', 'focus']`\n\nWhen customizing `eventsToHandle` or `clearOnBlur`, the value you supply will replace the default. To customize `eventsToHandle`, be sure to replace the entire array.\n\nWhen setting `clearOnBlurPlaceholder` to `true`, it will show the placeholder text instead of the empty mask. It requires the `ui-mask-placeholder` attribute to be set on the input to display properly.\n\nWhereas, `maskDefinitions` is an object, so any custom object you supply will be merged together with the defaults using `angular.extend()`. This allows you to override the defaults selectively, if you wish.\n\n#### maskDefinitions\nThe keys in `maskDefinitions` represent the special tokens/characters used in your mask declaration to delimit acceptable ranges of inputs. For example, we use '9' here to accept any numeric values for a phone number: `ui-mask=\"(999) 999-9999\"`. The values associated with each token are regexen. Each regex defines the ranges of values that will be acceptable as inputs in the position of that token.\n\n\n## Development\n\nWe use Karma and jshint to ensure the quality of the code.  The easiest way to run these checks is to use gulp:\n\n```sh\nnpm install -g gulp-cli\nnpm install && bower install\ngulp\n```\n\nThe karma task will try to open Firefox and Chrome as browser in which to run the tests.  Make sure this is available or change the configuration in `karma.conf.js`\n\n\n### Gulp watch\n\n`gulp watch` will automatically test your code and build a release whenever source files change.\n\n### How to release\n\nUse gulp to bump version, build and create a tag. Then push to GitHub:\n\n````sh\ngulp release [--patch|--minor|--major]\ngit push --tags origin master # push everything to GitHub\n````\n\nTravis will take care of testing and publishing to npm's registry (bower will pick up the change automatically). Finally [create a release on GitHub](https://github.com/angular-ui/ui-mask/releases/new) from the tag created by Travis.\n",
  "readmeFilename": "README.md",
  "description": "Apply a mask on an input field so the user can only type pre-determined pattern.",
  "bugs": {
    "url": "https://github.com/angular-ui/ui-mask/issues"
  },
  "_id": "angular-ui-mask@1.7.2",
  "dist": {
    "shasum": "90fc6bae399a28ec3451418b838fa2244fda6338"
  },
  "_from": "angular-ui-mask@",
  "_resolved": "https://registry.npmjs.org/angular-ui-mask/-/angular-ui-mask-1.7.2.tgz"
}
